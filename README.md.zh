# 作业 4 (ReactJS)

[请查看课程网站获取完整规范](https://cgi.cse.unsw.edu.au/~cs6080/NOW/assessments/assignments/ass4)

本作业截止日期为4月25日晚上8点。

**请在开始之前在终端中运行 `./util/setup.sh`。这将设置与"Git提交要求"相关的检查。**

请注意，你**不能**使用任何预构建的网页应用模板或任何AI网页应用创建器来完成此作业。

依赖文件如 `package.json` 和 `package-lock.json` 不包含在git要求中，应相应更新以包含你的工作的最新依赖项，确保在 `frontend` 目录中正确安装依赖项。

## 2. 前端（需要完成的工作）

你需要为提供的后端构建一个前端。这个前端应该使用React.js构建。它应该是一个单页应用程序，不需要刷新页面就能更新状态。（如果你的应用程序不是完全的单页应用，将会受到严重的分数惩罚）

需要实现以下功能，以使你的React.js应用程序满足任务要求，并能与3.2中描述的后端配合工作。

需求描述了一系列**界面**。界面可以是弹出窗口/模态框，或整个页面。使用这种语言是为了让你可以选择如何显示它。界面本质上是你的基于网络的应用程序的某种状态。

标记为🙉🙉🙉的内容仅需要双人尝试完成，个人尝试不需要完成。

### 2.1. 功能1. 管理员认证 (10%)

#### 2.1.1. 登录界面
 * 必须存在一个唯一的路由，例如 `/login`
 * 用户必须能够输入他们的 `email` 和 `password`
 * 如果表单提交失败，应显示合理的错误消息
 * 必须存在一个用于提交表单的按钮
 * 表单必须能在任何字段中按回车键提交

#### 2.1.2. 注册界面
 * 必须存在一个唯一的路由，例如 `/register`
 * 用户必须能够输入他们的 `email`、`password` 和 `name`
 * 应该存在一个确认 `password` 字段，用户在其中重新输入密码
 * 如果两个密码不匹配，用户应在提交前收到错误弹窗
 * 如果表单提交失败，应显示合理的错误消息
 * 必须存在一个用于提交表单的按钮
 * 表单必须能在任何字段中按回车键提交

#### 2.1.3. 登出按钮
 * 所有已认证用户在任何交互界面上都必须存在登出按钮
 * 点击此登出按钮时，用户登出并返回登录界面，然后需要重新登录才能访问应用程序

### 2.2. 功能2. 管理员创建和编辑游戏 (12%)

#### 2.2.1. 仪表板
 * 必须存在一个唯一的路由，例如 `/dashboard`
 * 显示所有游戏的仪表板，每个游戏显示**标题**、包含的**问题数量**、**缩略图**和完成的**总时长**（每个问题时长的总和）
 * 每个列出的游戏都应该有一个可点击的UI组件，将用户带到编辑该特定游戏的界面。例如 `/game/{game_id}`
 * 此界面上存在一个按钮，弹出一个UI组件，允许用户创建新游戏，为游戏提供名称。创建新游戏后，它**必须**立即添加到仪表板中，无需刷新
 * 🙉🙉🙉（仅限双人）此界面上存在一个按钮，弹出一个UI组件，允许用户删除特定游戏

#### 2.2.2. 编辑BigBrain游戏
 * 必须存在一个以游戏ID为参数的唯一路由。例如 `/game/{game_id}`
 * 此界面允许用户选择要编辑的问题
 * 此界面允许用户删除特定问题和添加新问题，所有操作必须在不刷新的情况下完成
 * 🙉🙉🙉（仅限双人）此界面还应允许编辑游戏元数据，如名称和缩略图

#### 2.2.3. 编辑BigBrain游戏问题
 * 必须存在一个同时以游戏ID和问题ID为参数的唯一路由。例如 `/game/{game_id}/question/{question_id}`
 * 此页面上可编辑的项目包括：
   * 问题类型（多选、单选、判断）
     * 单选题有多个答案供玩家猜测，**只有一个**是正确的
     * 多选题有多个答案供玩家猜测，**多个**是正确的，他们必须选择**所有**正确的答案
     * 判断题有一个**单一**答案供玩家猜测，答案要么正确要么错误
   * 问题本身（作为 `string`）
   * 用户回答问题的时间限制（作为 `number`）
   * 问题的分值（作为 `number`）
   * 可选择附加YouTube视频URL或上传照片，以增强所问问题的效果
   * 在**2**到**6**个答案之间，每个答案包含答案内容（作为 `string`）

### 2.3. 功能3. 管理员启动、停止、查看游戏会话结果 (12%)

#### 2.3.1. 启动游戏会话
 * 在仪表板页面上，用户应能通过点击 `开始游戏` 按钮启动新的游戏会话
 * 当游戏会话启动时，显示一个弹窗，显示游戏的会话ID（作为 `string`）
 * 这个会话ID应该能够通过某种"复制链接"UI组件**复制**到剪贴板。点击此项时，将直接URL复制到剪贴板。访问此URL时，用户应该进入游戏界面（在 `2.4` 中描述），并自动填充会话代码
 * 用户启动游戏会话后，UI应适当改变以反映特定游戏的会话处于活动状态
 * 注意：一个游戏同一时间只能有**一个**活动会话

#### 2.3.2. 停止游戏会话
 * 在仪表板页面上，能够停止已启动的游戏会话。停止游戏会话会将所有活动玩家发送到结果界面。已停止的会话无法重新启动
 * 当游戏会话停止时，出现一个弹窗提示管理员"是否要查看结果？